{
	"name": "vscode-language-merlin6502",
	"displayName": "Merlin 6502",
	"description": "Merlin assembly language for 6502 family of processors",
	"icon": "language-merlin-icon.png",
	"version": "3.0.1",
	"license": "GPL-3.0-only",
	"publisher": "dfgordon",
	"repository": {
		"type": "git",
		"url": "https://github.com/dfgordon/vscode-language-merlin6502"
	},
	"engines": {
		"vscode": "^1.85.0"
	},
	"categories": [
		"Programming Languages"
	],
	"main": "./client/out/extension.js",
	"contributes": {
		"configuration": {
			"title": "Merlin 6502",
			"properties": {
				"merlin6502.version": {
					"enum": [
						"Merlin 8",
						"Merlin 16",
						"Merlin 16+",
						"Merlin 32"
					],
					"default": "Merlin 8",
					"markdownDescription": "Accept syntax for this version of Merlin"
				},
				"merlin6502.flag.caseSensitive": {
					"enum": [
						"ignore",
						"info",
						"warn",
						"error"
					],
					"default": "ignore",
					"description": "Flag lower case mnemonics."
				},
				"merlin6502.flag.unclosedFolds": {
					"enum": [
						"ignore",
						"info",
						"warn",
						"error"
					],
					"default": "error",
					"description": "Flag folding ranges that are never closed."
				},
				"merlin6502.columns.c1": {
					"type": "number",
					"default": 9,
					"minimum": 1,
					"markdownDescription": "Width of the label column to use in formatting"
				},
				"merlin6502.columns.c2": {
					"type": "number",
					"default": 6,
					"minimum": 1,
					"markdownDescription": "Width of the instruction column to use in formatting"
				},
				"merlin6502.columns.c3": {
					"type": "number",
					"default": 11,
					"minimum": 1,
					"markdownDescription": "Width of the operand column to use in formatting"
				},
				"merlin6502.linker.detect": {
					"type": "number",
					"default": 0.1,
					"minimum": 0,
					"maximum": 1,
					"markdownDescription": "Threshold to trigger interpretation as a linker command file.  This is the ratio of occurrences of ASM, LNK, or LKV, to lines in the document."
				},
				"merlin6502.hovers.specialAddresses": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show hovers for special addresses such as ROM routines, soft switches, etc."
				},
				"merlin6502.hovers.mnemonics": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show hovers for opcode mnemonics such as `LDA`, `STA`, etc."
				},
				"merlin6502.hovers.pseudo": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show hovers for pseudo-opcode mnemonics such as `EQU`, `ASC`, etc."
				},
				"merlin6502.completions.lowerCase": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Use lower case in completions and snippets (ingored if case sensitive)."
				},
				"merlin6502.completions.ibas": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Offer address completions applicable to Integer BASIC"
				},
				"merlin6502.completions.abas": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Offer address completions applicable to Applesoft BASIC"
				},
				"merlin6502.disassembly.brk": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Recognize BRK instruction and operand during disassembly"
				},
				"merlin6502.diagnostics.live": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Update diagnostics on any document change.  When false, diagnostics only update on save, rescan, or activate."
				}
			}
		},
		"languages": [
			{
				"id": "merlin6502",
				"extensions": [
					".S",
					".asm"
				],
				"firstLine": "^ *(ORG|org) *\\$?[0-9A-Fa-f]+",
				"configuration": "./language-configuration.json"
			}
		],
		"commands": [
			{
				"command": "merlin6502.format",
				"title": "merlin6502: Format for copy and paste into Merlin 8"
			},
			{
				"command": "merlin6502.getFrontVii",
				"title": "merlin6502: Insert from Virtual ][ front machine"
			},
			{
				"command": "merlin6502.getAppleWinSaveState",
				"title": "merlin6502: Insert from AppleWin save state"
			},
			{
				"command": "merlin6502.getFromDiskImage",
				"title": "merlin6502: Insert from disk image"
			},
			{
				"command": "merlin6502.saveToDiskImage",
				"title": "merlin6502: Save to disk image"
			},
			{
				"command": "merlin6502.selectMaster",
				"title": "merlin6502: Select master file"
			},
			{
				"command": "merlin6502.rescan",
				"title": "merlin6502: Rescan modules and includes"
			},
			{
				"command": "merlin6502.toData",
				"title": "merlin6502: Convert code lines to data lines"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "merlin6502.format",
					"when": "editorLangId == merlin6502"
				},
				{
					"command": "merlin6502.getFrontVii",
					"when": "editorLangId == merlin6502"
				},
				{
					"command": "merlin6502.getAppleWinSaveState",
					"when": "editorLangId == merlin6502"
				},
				{
					"command": "merlin6502.getFromDiskImage",
					"when": "editorLangId == merlin6502"
				},
				{
					"command": "merlin6502.saveToDiskImage",
					"when": "editorLangId == merlin6502"
				},
				{
					"command": "merlin6502.selectMaster",
					"when": "editorLangId == merlin6502"
				},
				{
					"command": "merlin6502.rescan",
					"when": "editorLangId == merlin6502"
				},
				{
					"command": "merlin6502.toData",
					"title": "editorLangId == merlin6502"
				}
			]
		}
	},
	"scripts": {
		"reset-client": "run-script-os",
		"reset-client:windows": "npx rimraf client\\out && mkdir client\\out",
		"reset-client:default": "npx rimraf client/out && mkdir client/out",
		"vscode:prepublish": "npm run esbuild-client -- --minify",
		"esbuild-client": "npm run reset-client && esbuild ./client/src/extension.ts --bundle --outfile=client/out/extension.js --external:vscode --format=cjs --platform=node",
		"build": "npm run esbuild-client -- --sourcemap",
		"lint": "eslint . --ext .ts,.tsx",
		"test-compile": "npm run reset-client && tsc -p ./client/",
		"test": "node ./client/out/test/runTest.js"
	},
	"devDependencies": {
		"@types/mocha": "^10.0.1",
		"@types/node": "^20.16.0",
		"@types/vscode": "^1.85.0",
		"@typescript-eslint/eslint-plugin": "^8.2.0",
		"@typescript-eslint/parser": "^8.2.0",
		"@vscode/test-electron": "^2.4.1",
		"esbuild": "^0.23.1",
		"eslint": "^9.9.0",
		"glob": "^11.0.0",
		"mocha": "^10.7.3",
		"rimraf": "^6.0.1",
		"run-script-os": "^1.1.6",
		"typescript": "^5.5.4"
	}
}
